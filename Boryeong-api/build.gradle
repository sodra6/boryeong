buildscript {
    ext {
        queryDslVersion = "4.4.0"
    }
}

plugins {
    id 'org.springframework.boot' version '2.5.6'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'war'
}

group 'com.mindone.Boryeongapi'
version '1.0-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
    mavenLocal()
}


dependencies {

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-devtools'
    implementation 'org.springframework.boot:spring-boot-starter-parent:2.0.1.RELEASE'
    implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'
    implementation 'org.projectlombok:lombok:1.18.10'
    annotationProcessor 'org.projectlombok:lombok:1.18.10'
    implementation 'org.webjars:jquery:3.3.1'

    implementation 'org.apache.commons:commons-collections4:4.4'

//    implementation 'com.oracle.ojdbc:ojdbc8:19.3.0.0'
//    implementation 'com.oracle.ojdbc:orai18n:19.3.0.0'
    implementation files("$projectDir/src/main/resources/lib/tibero6-jdbc-14.jar")

    implementation group: 'io.springfox', name: 'springfox-boot-starter', version: '3.0.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    implementation "com.querydsl:querydsl-core:${queryDslVersion}"
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    implementation "com.querydsl:querydsl-sql:${queryDslVersion}"
    annotationProcessor(
            "jakarta.persistence:jakarta.persistence-api",
            "jakarta.annotation:jakarta.annotation-api",
            "com.querydsl:querydsl-apt:${queryDslVersion}:jpa")

//    implementation(platform("org.apache.logging.log4j:log4j-bom:2.15.0"))
}

sourceSets {
    main {
        java {
            srcDirs = ["$projectDir/src/main/java", "$projectDir/src/main/generated"]
        }
    }
}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        if (details.requested.group == 'org.apache.logging.log4j') {
            details.useVersion '2.15.0'
        }
    }
}

bootWar {
    archiveBaseName = "Boryeong-api"
    archiveFileName = "Boryeong-api.war"
    archiveVersion = "0.0.0"
}

test {
    useJUnitPlatform()
}